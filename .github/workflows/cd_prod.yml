name: CD to Prod

on:
  push:
    branches:  
      - 'main'        


jobs:
  cd-staging:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_PROD }} 
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN_PROD }}
      # DATABRICKS_JOBS_API_VERSION: 2.1

    steps:
      # - uses: actions/checkout@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis   

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.9

      - name: Install packages
        run: |
          make install

      # DUMMY DEPLOYMENT (to remove when ready)
      - name: Deploy the inference job
        run: |
          dbx deploy --jobs=cd-infer-job-prod




      # # TODO: CREATE THE TAG
      # # git tag -a v1.4 -m "my version 1.4" #(https://git-scm.com/book/en/v2/Git-Basics-Tagging)
          

      # # 4. Deploy the Inference Job to Staging 
      # # 4a. Deploy just the job (with native scheduling) to have it triggered by Databricks' native Job scheduler
      # - name: Deploy the inference job
      #   run: |
      #     dbx deploy --jobs=cd-infer-job-scheduled-prod          

      # # 4b. Deploy just the job (no scheduling) to have it triggered by AWS Managed Airflow
      # - name: Deploy the inference job
      #   run: |
      #     dbx deploy --jobs=cd-infer-job-prod      
       




      # # TODO: Enabled the tag in git, following VERSION file            

      # # - name: Create Release
      # #   id: create_release
      # #   uses: actions/create-release@v1
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      # #   with:
      # #     tag_name: ${{ github.ref }}
      # #     release_name: Release ${{ github.ref }}
      # #     body: |
      # #       Release for version ${{ github.ref }}.
      # #     draft: false
      # #     prerelease: false


          


